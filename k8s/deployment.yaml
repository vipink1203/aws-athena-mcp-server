apiVersion: apps/v1
kind: Deployment
metadata:
  name: athena-mcp-server
  labels:
    app: athena-mcp-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: athena-mcp-server
  template:
    metadata:
      labels:
        app: athena-mcp-server
    spec:
      serviceAccountName: athena-mcp-server
      containers:
      - name: athena-mcp-server
        image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/athena-mcp-server:latest
        ports:
        - containerPort: 8050
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        env:
        - name: AWS_REGION
          value: "${AWS_REGION}"
        - name: ATHENA_CATALOG
          value: "AwsDataCatalog"
        - name: ATHENA_DATABASE
          value: "${ATHENA_DEFAULT_DATABASE}"
        - name: ATHENA_WORKGROUP
          value: "${ATHENA_WORKGROUP}"
        - name: ATHENA_OUTPUT_LOCATION
          value: "${ATHENA_OUTPUT_LOCATION}"
        readinessProbe:
          httpGet:
            path: /health
            port: 8050
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8050
          initialDelaySeconds: 15
          periodSeconds: 20
      # Comment out if running in Fargate or if IRSA is set up
      # nodeSelector:
      #   eks.amazonaws.com/nodegroup: general